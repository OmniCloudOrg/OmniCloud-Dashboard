{
    "/": {
      "folders": ["images", "documents", "config", "backups", "logs", "public", "scripts"],
      "files": [
        {
          "name": "README.md",
          "type": "markdown",
          "size": "12 KB",
          "lastModified": "2025-02-10",
          "content": "# Project Documentation\n\nWelcome to the storage explorer. This is a sample README file.\n\n## Features\n\n- Browse files and folders\n- Upload and download files\n- Edit text files in the browser\n- Organize your storage efficiently"
        },
        {
          "name": "setup.json",
          "type": "json",
          "size": "3 KB",
          "lastModified": "2025-02-12",
          "content": "{\n  \"version\": \"1.0.0\",\n  \"environment\": \"production\",\n  \"features\": {\n    \"sharing\": true,\n    \"encryption\": true,\n    \"versioning\": true\n  },\n  \"limits\": {\n    \"maxFileSize\": \"5GB\",\n    \"maxBucketSize\": \"1TB\"\n  }\n}"
        },
        {
          "name": "build.rs",
          "type": "rust",
          "size": "1.2 MB",
          "lastModified": "2025-02-15",
          "content": "use std::fs;\nuse std::path::Path;\n\nfn main() {\n    let path = Path::new(\"src/main.rs\");\n    if path.exists() {\n        println!(\"File exists!\");\n    } else {\n        println!(\"File does not exist!\");\n    }\n\n    fs::copy(\"src/main.rs\", \"build/main.rs\").expect(\"Failed to copy file\");\n}\n"
        }
      ]
    },
    "/images/": {
      "folders": ["avatars", "banners", "icons"],
      "files": [
        {
          "name": "logo.svg",
          "type": "svg",
          "size": "45 KB",
          "lastModified": "2025-01-20",
          "content": "<svg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"blue\" stroke-width=\"4\" fill=\"lightblue\" />\n  <text x=\"50\" y=\"55\" font-size=\"20\" text-anchor=\"middle\" fill=\"darkblue\">Logo</text>\n</svg>"
        }
      ]
    },
    "/documents/": {
      "folders": ["reports", "contracts"],
      "files": [
        {
          "name": "project-plan.md",
          "type": "markdown",
          "size": "35 KB",
          "lastModified": "2025-02-05",
          "content": "# Project Plan\n\n## Timeline\n\n- **Phase 1**: Planning and Setup (2 weeks)\n- **Phase 2**: Development (8 weeks)\n- **Phase 3**: Testing (4 weeks)\n- **Phase 4**: Deployment (2 weeks)\n\n## Resources\n\n- 3 Frontend Developers\n- 2 Backend Developers\n- 1 DevOps Engineer\n- 1 Project Manager\n\n## Deliverables\n\n1. API Documentation\n2. User Interface\n3. Admin Dashboard\n4. Reporting System"
        }
      ]
    },
    "/config/": {
      "folders": [],
      "files": [
        {
          "name": "app-settings.json",
          "type": "json",
          "size": "8 KB",
          "lastModified": "2025-02-20",
          "content": "{\n  \"app\": {\n    \"name\": \"Cloud Storage Manager\",\n    \"version\": \"2.3.1\",\n    \"theme\": \"dark\",\n    \"language\": \"en-US\"\n  },\n  \"security\": {\n    \"sessionTimeout\": 30,\n    \"maxLoginAttempts\": 5,\n    \"passwordPolicy\": {\n      \"minLength\": 12,\n      \"requireSpecialChars\": true,\n      \"requireNumbers\": true,\n      \"requireUppercase\": true\n    }\n  },\n  \"storage\": {\n    \"defaultQuota\": \"100GB\",\n    \"maxFileSize\": \"5GB\",\n    \"allowedFileTypes\": [\"*\"]\n  }\n}"
        },
        {
          "name": "environment.yml",
          "type": "yaml",
          "size": "3 KB",
          "lastModified": "2025-02-22",
          "content": "name: production\ndescription: Production environment configuration\n\ndatabase:\n  host: db.example.com\n  port: 5432\n  name: storage_prod\n  user: ${DB_USER}\n  password: ${DB_PASSWORD}\n  pool: \n    min: 5\n    max: 25\n\ncache:\n  provider: redis\n  host: cache.example.com\n  port: 6379\n\nstorage:\n  provider: s3\n  region: us-west-2\n  bucket: example-storage-prod\n\nlogging:\n  level: info\n  retention: 90days"
        }
      ]
    },
    "/backups/": {
      "folders": ["daily", "weekly"],
      "files": [
        {
          "name": "backup-policy.md",
          "type": "markdown",
          "size": "10 KB",
          "lastModified": "2025-01-10",
          "content": "# Backup Policy\n\n## Schedule\n\n- **Daily backups**: Incremental backups every 24 hours\n- **Weekly backups**: Full backups every Sunday at 1:00 AM UTC\n- **Monthly backups**: Archived full backups on the 1st of each month\n\n## Retention\n\n- Daily backups are retained for 14 days\n- Weekly backups are retained for 2 months\n- Monthly backups are retained for 1 year\n\n## Storage\n\nAll backups are encrypted and stored in geographically distributed locations for redundancy."
        }
      ]
    },
    "/logs/": {
      "folders": [],
      "files": [
        {
          "name": "system.log",
          "type": "log",
          "size": "256 KB",
          "lastModified": "2025-04-25",
          "content": "2025-04-25 08:00:12 INFO  [system] System startup completed successfully\n2025-04-25 08:00:15 INFO  [auth] User authentication service initialized\n2025-04-25 08:01:23 WARN  [storage] Disk usage at 82%, approaching warning threshold\n2025-04-25 08:05:45 INFO  [backup] Daily backup started\n2025-04-25 08:15:32 INFO  [backup] Daily backup completed successfully\n2025-04-25 09:12:03 ERROR [network] Connection timeout to CDN endpoint\n2025-04-25 09:12:45 INFO  [network] CDN connection reestablished\n2025-04-25 10:32:18 INFO  [auth] User login: admin@example.com\n2025-04-25 11:05:22 WARN  [security] Failed login attempt: unknown_user@example.com\n2025-04-25 11:05:45 WARN  [security] Failed login attempt: unknown_user@example.com\n2025-04-25 11:06:12 WARN  [security] IP address temporarily blocked due to multiple failed login attempts: 192.168.1.105"
        }
      ]
    }
}